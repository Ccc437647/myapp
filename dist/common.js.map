{"version":3,"file":"common.js","mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACnDA;AAeA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://myapp/._config_test.ts","webpack://myapp/._src_components_cross-platform_Button.tsx","webpack://myapp/._src_components_cross-platform_Checkbox.tsx","webpack://myapp/._src_components_cross-platform_CheckboxGroup.tsx","webpack://myapp/._src_components_cross-platform_Form.tsx","webpack://myapp/._src_components_cross-platform_Image.tsx","webpack://myapp/._src_components_cross-platform_Input.tsx","webpack://myapp/._src_components_cross-platform_Radio.tsx","webpack://myapp/._src_components_cross-platform_RadioGroup.tsx","webpack://myapp/._src_components_cross-platform_ScrollView.tsx","webpack://myapp/._src_components_cross-platform_Text.tsx","webpack://myapp/._src_components_cross-platform_View.tsx","webpack://myapp/._src_components_cross-platform_index.ts","webpack://myapp/._src_config.ts","webpack://myapp/._src_request_request.js","webpack://myapp/._src_request_user.ts"],"sourcesContent":["export default () => { };\r\n","import { Button as TaroButton } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Button(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroButton {...props} style={tw`${props.altClassName}`}>{props.children}</TaroButton> :\r\n            <TaroButton {...props} className={props.altClassName}>{props.children}</TaroButton>\r\n    )\r\n}\r\n","import { Checkbox as TaroCheckbox } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Checkbox(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroCheckbox {...props} style={tw`${props.altClassName}`}>{props.children}</TaroCheckbox> :\r\n            <TaroCheckbox {...props} className={props.altClassName}>{props.children}</TaroCheckbox>\r\n    )\r\n}\r\n","import { CheckboxGroup as TaroCheckboxGroup } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function CheckboxGroup(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroCheckboxGroup {...props} style={tw`${props.altClassName}`}>{props.children}</TaroCheckboxGroup> :\r\n            <TaroCheckboxGroup {...props} className={props.altClassName}>{props.children}</TaroCheckboxGroup>\r\n    )\r\n}\r\n","import { Form as TaroForm } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Form(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroForm {...props} style={tw`${props.altClassName}`}>{props.children}</TaroForm> :\r\n            <TaroForm {...props} className={props.altClassName}>{props.children}</TaroForm>\r\n    )\r\n}\r\n","import { Image as TaroImage } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Image(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroImage {...props} style={tw`${props.altClassName}`}>{props.children}</TaroImage> :\r\n            <TaroImage {...props} className={props.altClassName}>{props.children}</TaroImage>\r\n    )\r\n}\r\n","import { Input as TaroInput } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Input(props) {\r\n    // console.log('input的props', props);\r\n\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroInput {...props} style={tw`${props.altClassName}`}>{props.children}</TaroInput> :\r\n            <TaroInput {...props} className={props.altClassName}>{props.children}</TaroInput>\r\n    )\r\n}\r\n","import { Radio as TaroRadio } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Radio(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroRadio {...props} style={tw`${props.altClassName}`}>{props.children}</TaroRadio> :\r\n            <TaroRadio {...props} className={props.altClassName}>{props.children}</TaroRadio>\r\n    )\r\n}\r\n","import { RadioGroup as TaroRadioGroup } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function RadioGroup(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroRadioGroup {...props} style={tw`${props.altClassName}`}>{props.children}</TaroRadioGroup> :\r\n            <TaroRadioGroup {...props} className={props.altClassName}>{props.children}</TaroRadioGroup>\r\n    )\r\n}\r\n","import { ScrollView as TaroScrollView } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function ScrollView(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroScrollView {...props} style={tw`${props.altClassName}`}>{props.children}</TaroScrollView> :\r\n            <TaroScrollView {...props} className={props.altClassName}>{props.children}</TaroScrollView>\r\n    )\r\n}\r\n","import { Text as TaroText } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function Text(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroText {...props} style={tw`${props.altClassName}`}>{props.children}</TaroText> :\r\n            <TaroText {...props} className={props.altClassName}>{props.children}</TaroText>\r\n    )\r\n\r\n}\r\n","import { View as TaroView } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro';\r\nimport tw from 'twrnc'\r\n\r\nexport function View(props) {\r\n    const env = Taro.getEnv();\r\n    return (\r\n        env == 'RN' ?\r\n            <TaroView {...props} style={tw`${props.altClassName}`}>{props.children}</TaroView> :\r\n            <TaroView {...props} className={props.altClassName}>{props.children}</TaroView>\r\n    )\r\n}\r\n","export * from './Text';\r\nexport * from './View';\r\nexport * from './Image';\r\nexport * from './Input';\r\nexport * from './Form';\r\nexport * from './Button';\r\nexport * from './RadioGroup';\r\nexport * from './Radio';\r\nexport * from './CheckboxGroup';\r\nexport * from './Checkbox';\r\nexport * from './ScrollView';","export const server = {\r\n    protocol: 'https://',\r\n    // domain: process.env.NODE_ENV === 'production' ? 'club.biqr.cn' : 'drink.biqr.cn',\r\n    domain: 'api.apiopen.top',\r\n    context: '/api/',\r\n}\r\n\r\nexport const baseURL = `${server.protocol}${server.domain}${server.context}`\r\n","import axios from 'axios';\r\nimport adapter from 'axios-miniprogram-adapter';\r\nimport Taro from '@tarojs/taro'\r\nimport { baseURL } from '../config'\r\n\r\n// 小程序环境,添加适配\r\nconst env = Taro.getEnv()\r\nif (env === 'WEAPP') {\r\n    axios.defaults.adapter = adapter;\r\n}\r\n\r\n// axios配置\r\nconst Axios = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 500,\r\n    headers: {\r\n    }\r\n})\r\n\r\n// 请求拦截\r\nAxios.interceptors.request.use(async res => {\r\n    let token\r\n    if (res.method === 'post') {\r\n        try {\r\n            await Taro.getStorage({ key: 'token' })\r\n        } catch (error) {\r\n            token = ''\r\n        }\r\n\r\n        res.headers = Object.assign({\r\n            'Content-Type': 'application/x-www-form-urlencoded;'\r\n        }, res.headers);\r\n    }\r\n    res.headers = Object.assign({\r\n        token\r\n    }, res.headers);\r\n    return res;\r\n}, (error) => {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 响应拦截\r\nAxios.interceptors.response.use(res => {\r\n    let { data: { code, message, result } } = res;\r\n    let apiResult = {\r\n        code, message, result\r\n    }\r\n\r\n    return apiResult\r\n})\r\n\r\nexport default Axios","import { AxiosResponse } from 'axios';\r\nimport Axios from './request';\r\n\r\ninterface Result {\r\n  data: string;\r\n  dateTime: string;\r\n  time: string;\r\n  weekday: string;\r\n}\r\n\r\ninterface TimeResult {\r\n  code: number;\r\n  message: string;\r\n  result: Result;\r\n}\r\n\r\n/**\r\n * \r\n * @returns 每日时间\r\n */\r\nexport const apiGetTime = async (): Promise<AxiosResponse<TimeResult>> => { return Axios.get<TimeResult>(`getTime`) }\r\n\r\n/**\r\n * \r\n * @param account 账户\r\n * @param password 密码\r\n * @returns 用户登录信息\r\n */\r\nexport const apiLogin = async (account, password): Promise<AxiosResponse> => { return Axios.post(`login`, { account, password }) }\r\n\r\n/**\r\n * \r\n * @param id 用户id\r\n * @returns 删除个人动态\r\n */\r\nexport const apidelPersonDynamicList = async (id): Promise<AxiosResponse> => { return Axios.post(`delPersonDynamicList`, { id }) }"],"names":[],"sourceRoot":""}