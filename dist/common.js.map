{"version":3,"file":"common.js","mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACpDA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://myapp/._config_test.ts","webpack://myapp/._src_components_cross-platform_Button.tsx","webpack://myapp/._src_components_cross-platform_Checkbox.tsx","webpack://myapp/._src_components_cross-platform_CheckboxGroup.tsx","webpack://myapp/._src_components_cross-platform_Form.tsx","webpack://myapp/._src_components_cross-platform_Image.tsx","webpack://myapp/._src_components_cross-platform_Input.tsx","webpack://myapp/._src_components_cross-platform_Radio.tsx","webpack://myapp/._src_components_cross-platform_RadioGroup.tsx","webpack://myapp/._src_components_cross-platform_ScrollView.tsx","webpack://myapp/._src_components_cross-platform_Text.tsx","webpack://myapp/._src_components_cross-platform_View.tsx","webpack://myapp/._src_components_cross-platform_index.ts","webpack://myapp/._src_config.ts","webpack://myapp/._src_request_request.js","webpack://myapp/._src_request_user.ts"],"sourcesContent":["export default () => { };\n","import { Button as TaroButton } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Button(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroButton {...props} style={tw`${props.altClassName}`}>{props.children}</TaroButton> :\n            <TaroButton {...props} className={props.altClassName}>{props.children}</TaroButton>\n    )\n}\n","import { Checkbox as TaroCheckbox } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Checkbox(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroCheckbox {...props} style={tw`${props.altClassName}`}>{props.children}</TaroCheckbox> :\n            <TaroCheckbox {...props} className={props.altClassName}>{props.children}</TaroCheckbox>\n    )\n}\n","import { CheckboxGroup as TaroCheckboxGroup } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function CheckboxGroup(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroCheckboxGroup {...props} style={tw`${props.altClassName}`}>{props.children}</TaroCheckboxGroup> :\n            <TaroCheckboxGroup {...props} className={props.altClassName}>{props.children}</TaroCheckboxGroup>\n    )\n}\n","import { Form as TaroForm } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Form(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroForm {...props} style={tw`${props.altClassName}`}>{props.children}</TaroForm> :\n            <TaroForm {...props} className={props.altClassName}>{props.children}</TaroForm>\n    )\n}\n","import { Image as TaroImage } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Image(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroImage {...props} style={tw`${props.altClassName}`}>{props.children}</TaroImage> :\n            <TaroImage {...props} className={props.altClassName}>{props.children}</TaroImage>\n    )\n}\n","import { Input as TaroInput } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Input(props) {\n    // console.log('input的props', props);\n\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroInput {...props} style={tw`${props.altClassName}`}>{props.children}</TaroInput> :\n            <TaroInput {...props} className={props.altClassName}>{props.children}</TaroInput>\n    )\n}\n","import { Radio as TaroRadio } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Radio(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroRadio {...props} style={tw`${props.altClassName}`}>{props.children}</TaroRadio> :\n            <TaroRadio {...props} className={props.altClassName}>{props.children}</TaroRadio>\n    )\n}\n","import { RadioGroup as TaroRadioGroup } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function RadioGroup(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroRadioGroup {...props} style={tw`${props.altClassName}`}>{props.children}</TaroRadioGroup> :\n            <TaroRadioGroup {...props} className={props.altClassName}>{props.children}</TaroRadioGroup>\n    )\n}\n","import { ScrollView as TaroScrollView } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function ScrollView(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroScrollView {...props} style={tw`${props.altClassName}`}>{props.children}</TaroScrollView> :\n            <TaroScrollView {...props} className={props.altClassName}>{props.children}</TaroScrollView>\n    )\n}\n","import { Text as TaroText } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function Text(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroText {...props} style={tw`${props.altClassName}`}>{props.children}</TaroText> :\n            <TaroText {...props} className={props.altClassName}>{props.children}</TaroText>\n    )\n\n}\n","import { View as TaroView } from '@tarojs/components'\nimport Taro from '@tarojs/taro';\nimport tw from 'twrnc'\n\nexport function View(props) {\n    const env = Taro.getEnv();\n    return (\n        env == 'RN' ?\n            <TaroView {...props} style={tw`${props.altClassName}`}>{props.children}</TaroView> :\n            <TaroView {...props} className={props.altClassName}>{props.children}</TaroView>\n    )\n}\n","export * from './Text';\nexport * from './View';\nexport * from './Image';\nexport * from './Input';\nexport * from './Form';\nexport * from './Button';\nexport * from './RadioGroup';\nexport * from './Radio';\nexport * from './CheckboxGroup';\nexport * from './Checkbox';\nexport * from './ScrollView';","export const server = {\n    protocol: 'https://',\n    // domain: process.env.NODE_ENV === 'production' ? 'club.biqr.cn' : 'drink.biqr.cn',\n    domain: 'api.apiopen.top',\n    context: '/api/',\n}\n\nexport const baseURL = `${server.protocol}${server.domain}${server.context}`\n","import axios from 'axios';\nimport adapter from 'axios-miniprogram-adapter';\nimport Taro from '@tarojs/taro'\nimport { baseURL } from '../config'\n\n// 小程序环境,添加适配\nconst env = Taro.getEnv()\nif (env === 'WEAPP') {\n    axios.defaults.adapter = adapter;\n}\n\n// axios配置\nconst Axios = axios.create({\n    baseURL: baseURL,\n    timeout: 500,\n    headers: {\n    }\n})\n\n// 请求拦截\nAxios.interceptors.request.use(async res => {\n    let token\n    if (res.method === 'post') {\n        try {\n            await Taro.getStorage({ key: 'token' })\n        } catch (error) {\n            token = ''\n        }\n\n        res.headers = Object.assign({\n            'Content-Type': 'application/x-www-form-urlencoded;'\n        }, res.headers);\n    }\n    res.headers = Object.assign({\n        token\n    }, res.headers);\n    return res;\n}, (error) => {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 响应拦截\nAxios.interceptors.response.use(res => {\n    let { data: { code, message, result } } = res;\n    let apiResult = {\n        code, message, result\n    }\n\n    return apiResult\n})\n\nexport default Axios","import Axios from './request';\nimport type { TimeResult } from '../tstype/user'\n\nenum API {\n  TIME_URL = 'getTime',\n  LOGIN_URL = 'login',\n  DELETELIST_URL = 'delPersonDynamicList'\n}\n\n/**\n * \n * @returns 获取每日时间\n */\nexport const apiGetTime = async () => { return Axios.get<any, TimeResult>(API.TIME_URL) }\n\n/**\n * \n * @param account 账户\n * @param password 密码\n * @returns 获取用户登录信息\n */\nexport const apiLogin = async (account, password) => { return Axios.post(API.LOGIN_URL, { account, password }) }\n\n/**\n * \n * @param id 用户id\n * @returns 删除个人动态\n */\nexport const apidelPersonDynamicList = async (id) => { return Axios.post(API.DELETELIST_URL, { id }) }"],"names":[],"sourceRoot":""}